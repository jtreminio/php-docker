#!/usr/bin/env bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
BUILD_TYPE="all"
RUN_TESTS="no"

function show_help() {
    cat << EOF

Usage: build [OPTION]
Builds CLI, FPM, Apache and Nginx images for PHP

-v          full version, 7.4.13 or 7.3.25 or 7.2.34, etc
            if -b=env this flag is not accepted
-b          build type, "all", "env", "cli", "fpm", "apache", "nginx"
            defaults to "all"
-p          push image(s) to docker hub
-t          run tests after build
            defaults to "no"
-h          display this help and exit

Example: build -v 8.1.0 -b all -p yes
    Builds these images - jtreminio:php-cli
                        - jtreminio:php
                        - jtreminio:php-apache
                        - jtreminio:php-nginx
EOF

    exit 0
}

while getopts ":v:b:p:t:h" opt; do
    case $opt in
        v) PHP_VERSION="$OPTARG"
        ;;
        b) BUILD_TYPE="$OPTARG"
        ;;
        p) PUSH_TO_HUB="$OPTARG"
        ;;
        t) RUN_TESTS="$OPTARG"
        ;;
        h) show_help
        ;;
        \?) echo "Invalid option -$OPTARG" >&2
        ;;
    esac
done

if [[ "${BUILD_TYPE}" != "all" &&
      "${BUILD_TYPE}" != "env" &&
      "${BUILD_TYPE}" != "cli" &&
      "${BUILD_TYPE}" != "fpm" &&
      "${BUILD_TYPE}" != "apache" &&
      "${BUILD_TYPE}" != "nginx"
   ]]; then
    printf "invalid build (-b) value: ${BUILD_TYPE}\n"
    show_help
    exit 1
fi

if [[ "${PUSH_TO_HUB}" != "yes" &&
      "${PUSH_TO_HUB}" != "no"
   ]]; then
    printf "invalid push to hub (-p) value: ${PUSH_TO_HUB}\n"
    show_help
    exit 1
fi

if [[ "${RUN_TESTS}" != "yes" &&
      "${RUN_TESTS}" != "no"
   ]]; then
    printf "invalid run tests (-t) value: ${RUN_TESTS}\n"
    show_help
    exit 1
fi

if [[ ${BUILD_TYPE} == "env" ]] && ! [[ -z ${PHP_VERSION} ]]; then
    printf "version (-v) flag not accepted when -b=env\n"
    show_help
    exit 1
fi

if [[ ${BUILD_TYPE} != "env" ]] && [[ -z ${PHP_VERSION} ]]; then
    printf "invalid version (-v) value: ${PHP_VERSION}\n"
    show_help
    exit 1
fi

if [[ ${BUILD_TYPE} != "env" ]]; then
    # 7.4.13 -> 7.4
    PHP_MAJOR=$(echo ${PHP_VERSION} | cut -d . -f -2)

    if [[ "${PHP_VERSION// }" == "${PHP_MAJOR// }" ]]; then
        printf "PHP_VERSION must be in 7.4.0 format"
        exit 1
    fi

    REGEXP="([0-9]{1}\.)+([0-9]{1}\.)+([0-9]{1,2})"
    if ! [[ ${PHP_VERSION} =~ ${REGEXP} ]]; then
        printf "PHP_VERSION must be in 7.4.0 format"
        exit 1
    fi
fi

function main() {
    if [[ ${BUILD_TYPE} == "env" ]]; then
        build_env_image

        if [[ ${PUSH_TO_HUB} == "yes" ]]; then
            docker image push jtreminio/phpenv:latest
        fi
        exit 0
    fi

    case ${BUILD_TYPE} in
        cli)
            build_php_cli_image ${PHP_MAJOR} ${PHP_VERSION}
        ;;
        fpm)
            build_php_fpm_image ${PHP_MAJOR} ${PHP_VERSION}
        ;;
        apache)
            build_apache_image ${PHP_MAJOR} ${PHP_VERSION}
        ;;
        nginx)
            build_nginx_image ${PHP_MAJOR} ${PHP_VERSION}
        ;;
        *)
            build_php_cli_image ${PHP_MAJOR} ${PHP_VERSION}
            build_php_fpm_image ${PHP_MAJOR} ${PHP_VERSION}
            build_apache_image ${PHP_MAJOR} ${PHP_VERSION}
            build_nginx_image ${PHP_MAJOR} ${PHP_VERSION}
        ;;
    esac

    if [[ ${RUN_TESTS} == "yes" ]]; then
        bash "${DIR}/test" ${PHP_VERSION}
    fi

    if [[ $? -ne 0 ]]; then
        exit 1
    fi

    if [[ "${PUSH_TO_HUB}" == "yes" ]]; then
        case ${BUILD_TYPE} in
            cli)
                docker image push jtreminio/php-cli:${PHP_MAJOR}
                docker image push jtreminio/php-cli:${PHP_VERSION}
            ;;
            fpm)
                docker image push jtreminio/php:${PHP_MAJOR}
                docker image push jtreminio/php:${PHP_VERSION}
            ;;
            apache)
                docker image push jtreminio/php-apache:${PHP_MAJOR}
                docker image push jtreminio/php-apache:${PHP_VERSION}
            ;;
            nginx)
                docker image push jtreminio/php-nginx:${PHP_MAJOR}
                docker image push jtreminio/php-nginx:${PHP_VERSION}
            ;;
            *)
                docker image push jtreminio/php-cli:${PHP_MAJOR}
                docker image push jtreminio/php-cli:${PHP_VERSION}
                docker image push jtreminio/php:${PHP_MAJOR}
                docker image push jtreminio/php:${PHP_VERSION}
                docker image push jtreminio/php-apache:${PHP_MAJOR}
                docker image push jtreminio/php-apache:${PHP_VERSION}
                docker image push jtreminio/php-nginx:${PHP_MAJOR}
                docker image push jtreminio/php-nginx:${PHP_VERSION}
            ;;
        esac
    fi
}

function build_env_image() {
    echo "Building ENV"
    docker image build \
      -t jtreminio/phpenv:latest \
      -f Dockerfile-env \
      .

    if [[ $? -ne 0 ]]; then
        echo "Error encountered"
        exit 1
    fi
}

function build_php_cli_image() {
    PHP_MAJOR="${1}"
    PHP_MINOR="${2}"

    echo "Building PHP-CLI ${PHP_MINOR}"
    docker image build \
      --build-arg PHP_VER=${PHP_MAJOR} \
      --build-arg PHP_VER_DOT=${PHP_MINOR} \
      -t jtreminio/php-cli:${PHP_MAJOR} \
      -t jtreminio/php-cli:${PHP_MINOR} \
      -f Dockerfile-php-cli \
      .

    if [[ $? -ne 0 ]]; then
        echo "Error encountered"
        exit 1
    fi
}

function build_php_fpm_image() {
    PHP_MAJOR="${1}"
    PHP_MINOR="${2}"

    echo "Building PHP-CLI + PHP-FPM ${PHP_MINOR}"
    docker image build \
      --build-arg PHP_VER=${PHP_MAJOR} \
      --build-arg PHP_VER_DOT=${PHP_MINOR} \
      -t jtreminio/php:${PHP_MAJOR} \
      -t jtreminio/php:${PHP_MINOR} \
      -f Dockerfile-php-fpm \
      .

    if [[ $? -ne 0 ]]; then
        echo "Error encountered"
        exit 1
    fi
}

function build_apache_image() {
    PHP_MAJOR="${1}"
    PHP_MINOR="${2}"

    echo "Building PHP ${PHP_MAJOR} + Apache"
    docker image build \
      --build-arg PHP_VER_DOT=${PHP_MINOR} \
      -t jtreminio/php-apache:${PHP_MAJOR} \
      -t jtreminio/php-apache:${PHP_MINOR} \
      -f Dockerfile-apache \
      .

    if [[ $? -ne 0 ]]; then
        echo "Error encountered"
        exit 1
    fi
}

function build_nginx_image() {
    PHP_MAJOR="${1}"
    PHP_MINOR="${2}"

    echo "Building PHP ${PHP_MAJOR} + Nginx"
    docker image build \
      --build-arg PHP_VER_DOT=${PHP_MINOR} \
      -t jtreminio/php-nginx:${PHP_MAJOR} \
      -t jtreminio/php-nginx:${PHP_MINOR} \
      -f Dockerfile-nginx \
      .

    if [[ $? -ne 0 ]]; then
        echo "Error encountered"
        exit 1
    fi
}

main
